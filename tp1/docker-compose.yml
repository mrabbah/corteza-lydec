version: "3.5"

# networks:
#   frontend:
#     name: frontend
#   storage:
#     name: storage

# volumes:
#   data:

services:

  corteza-server:
    image: cortezaproject/corteza:${VERSION}
    restart: unless-stopped
    depends_on: [ db ]
    env_file: .env
    volumes:
      - "./.data/corteza:/data"
    ports:
      - 8083:80

  db:
    image: postgres:13 #    networks: [ internal ]
    restart: unless-stopped
    healthcheck:
      {
        test: [ "CMD-SHELL", "pg_isready -U corteza" ],
        interval: 10s,
        timeout: 5s,
        retries: 5
      }
    volumes:
      - "./.data/db:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: corteza
      POSTGRES_PASSWORD: corteza

  db2:
    image: postgres:13 #    networks: [ internal ]
    restart: unless-stopped
    healthcheck:
      {
        test: [ "CMD-SHELL", "pg_isready -U corteza" ],
        interval: 10s,
        timeout: 5s,
        retries: 5
      }
    volumes:
      - "./.data/db2:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: userdb
      POSTGRES_PASSWORD: pwddb

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - 8081:80
    environment:
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_DEFAULT_EMAIL: contact@mydomain.com
      PGADMIN_DEFAULT_PASSWORD: mypassword
